#include "display.h"
#include "sim.h"
#include "config.h"
#include <Arduino.h>
#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

static const unsigned char PROGMEM network_icon[] =
{ B11111111,
  B01111110,
  B00111100,
  B00011000,
  B00011000,
  B00011000,
  B00011000,
  B00011000,
  B00011000,
  B00011000
};
static const unsigned char PROGMEM charged_icon[] =
{ B01100110,
  B01100110,
  B01100110,
  B11111111,
  B11111111,
  B11111111,
  B01111110,
  B00011000,
  B00011000,
  B00011000
};
static const unsigned char PROGMEM accept_icon[] =
{ 0x00, 0x00, 0x40, 0x00, 0x00, 0xe0, 0x00, 0x01, 0xf0, 0x00, 0x03, 0xe0, 0x00, 0x07, 0xc0, 0x00,
  0x0f, 0x80, 0x00, 0x1f, 0x00, 0x20, 0x3e, 0x00, 0x70, 0x7c, 0x00, 0xf8, 0xf8, 0x00, 0x7d, 0xf0,
  0x00, 0x3f, 0xe0, 0x00, 0x1f, 0xc0, 0x00, 0x0f, 0x80, 0x00, 0x07, 0x00, 0x00, 0x02, 0x00, 0x00
};
static const unsigned char PROGMEM reject_icon[] =
{ 0x20, 0x04, 0x70, 0x0e, 0xf8, 0x1f, 0x7c, 0x3e, 0x3e, 0x7c, 0x1f, 0xf8, 0x0f, 0xf0, 0x07, 0xe0,
  0x07, 0xe0, 0x0f, 0xf0, 0x1f, 0xf8, 0x3e, 0x7c, 0x7c, 0x3e, 0xf8, 0x1f, 0x70, 0x0e, 0x20, 0x04
};
static const unsigned char PROGMEM splash[] =
{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc,
  0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
  0x20, 0x00, 0x41, 0x24, 0x08, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x02,
  0x20, 0x00, 0x41, 0x04, 0x08, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x80, 0x02,
  0x20, 0x00, 0x41, 0x04, 0x08, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x80, 0x02,
  0x20, 0x00, 0x41, 0x24, 0x08, 0x23, 0x91, 0x10, 0x38, 0xa7, 0x01, 0x11, 0xc4, 0x40, 0x80, 0x02,
  0x20, 0x00, 0x7f, 0x24, 0x0f, 0xe4, 0x51, 0x10, 0x44, 0xc8, 0x81, 0x12, 0x24, 0x41, 0x00, 0x02,
  0x20, 0x00, 0x41, 0x24, 0x08, 0x24, 0x4a, 0xa0, 0x04, 0x88, 0x80, 0xa2, 0x24, 0x42, 0x00, 0x02,
  0x20, 0x00, 0x41, 0x24, 0x08, 0x24, 0x4a, 0xa0, 0x3c, 0x8f, 0x80, 0xa2, 0x24, 0x44, 0x00, 0x02,
  0x20, 0x00, 0x41, 0x24, 0x08, 0x24, 0x4a, 0xa0, 0x44, 0x88, 0x00, 0xa2, 0x24, 0x44, 0x00, 0x02,
  0x20, 0x00, 0x41, 0x20, 0x08, 0x24, 0x44, 0x40, 0x4c, 0x88, 0x80, 0x42, 0x24, 0x40, 0x00, 0x02,
  0x20, 0x00, 0x41, 0x24, 0x08, 0x23, 0x84, 0x40, 0x34, 0x87, 0x00, 0x41, 0xc3, 0xc4, 0x00, 0x02,
  0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x02,
  0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x02,
  0x1f, 0xff, 0xff, 0xfc, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe,
  0x0f, 0xff, 0xff, 0xfc, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc,
  0x00, 0x00, 0x00, 0xf4, 0x01, 0x80, 0x07, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xfa, 0x03, 0x00, 0x07, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x7a, 0x03, 0x00, 0x07, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x7d, 0x03, 0x00, 0x07, 0x80, 0x00, 0x3f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x7d, 0x03, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x7f, 0x83, 0xaa, 0xaa, 0xaa, 0xaf, 0x00, 0x07, 0xaa, 0xff, 0x80, 0x00, 0x03,
  0x00, 0x00, 0x07, 0xd5, 0x43, 0x55, 0x55, 0x55, 0x5c, 0x00, 0x01, 0xd5, 0x55, 0x7f, 0xf0, 0x1f,
  0x00, 0x00, 0xfa, 0xaa, 0xa3, 0xab, 0xfe, 0xa8, 0xf0, 0x00, 0x00, 0x7a, 0xaa, 0xaa, 0xaf, 0xfa,
  0x00, 0x07, 0x55, 0x55, 0x51, 0xd7, 0x87, 0xd5, 0xe0, 0x00, 0x00, 0x1d, 0x55, 0x55, 0x15, 0x7f,
  0x01, 0xfa, 0xaa, 0xaa, 0xad, 0xae, 0x00, 0xeb, 0xc0, 0x00, 0x00, 0x0e, 0xaa, 0xaa, 0xaa, 0xaa,
  0x07, 0x55, 0x55, 0x55, 0x57, 0xd4, 0x00, 0x3d, 0x80, 0x00, 0x00, 0x03, 0x55, 0x55, 0x55, 0x55,
  0x3a, 0xaa, 0xaa, 0xa8, 0xaa, 0xae, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x01, 0xea, 0xaa, 0xaa, 0xaa,
  0xd5, 0x55, 0x55, 0x55, 0x55, 0x47, 0xc0, 0x03, 0x00, 0x00, 0x00, 0x00, 0xf5, 0x55, 0x55, 0x55,
  0xaa, 0xa8, 0xaa, 0xaa, 0xb6, 0xaf, 0xf0, 0x01, 0x80, 0x00, 0x00, 0x00, 0x7a, 0xaa, 0xaa, 0xaa,
  0x55, 0x55, 0x55, 0x55, 0x41, 0x57, 0xfc, 0x00, 0x40, 0x00, 0x00, 0x00, 0x35, 0x55, 0x55, 0x55,
  0xaa, 0xaa, 0xaa, 0xaa, 0xb6, 0xab, 0xff, 0x00, 0x30, 0x00, 0x00, 0x00, 0x1a, 0xaa, 0xaa, 0xa3,
  0x55, 0x55, 0xff, 0xd5, 0x55, 0x55, 0xff, 0x80, 0x08, 0x00, 0x00, 0x00, 0x1d, 0x51, 0x55, 0x56,
  0xa8, 0xbf, 0x00, 0x7e, 0xaa, 0xaa, 0xff, 0xc0, 0x04, 0x00, 0x00, 0x00, 0x0e, 0xaa, 0xaa, 0xb8,
  0x57, 0xc0, 0x00, 0x03, 0xd5, 0x55, 0x7f, 0xe0, 0x02, 0x00, 0x00, 0x00, 0x07, 0x55, 0x55, 0xc0,
  0xbc, 0x00, 0x00, 0x00, 0x7e, 0xaf, 0xbf, 0xf0, 0x01, 0x00, 0x00, 0x00, 0x06, 0xaa, 0xae, 0x00,
  0xc0, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xf8, 0x00, 0x80, 0xf8, 0x00, 0x03, 0xff, 0xf0, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xfc, 0x00, 0x41, 0xfe, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x31, 0xff, 0xfe, 0x00, 0x01, 0xff, 0x00, 0x01, 0x80, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xff, 0xff, 0x00, 0x00, 0x1f, 0x80, 0x01, 0x80, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x3f, 0xff, 0x80, 0x00, 0x07, 0x80, 0x00, 0x80, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x0c, 0x0b, 0xc0, 0x00, 0x07, 0xc0, 0x00, 0xc0, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x03, 0x05, 0xe0, 0x00, 0x03, 0xc0, 0x00, 0xc0, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x00, 0xc2, 0xf0, 0x00, 0x03, 0xc0, 0x00, 0x60, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x07, 0xc3, 0x00, 0x31, 0x78, 0x00, 0x17, 0xc0, 0x00, 0x60, 0x00, 0x00,
  0x00, 0x0c, 0x00, 0x00, 0x38, 0x01, 0x80, 0x0e, 0xfc, 0x00, 0x0b, 0x80, 0x00, 0x70, 0x00, 0x00,
  0x00, 0x03, 0xe0, 0x03, 0xc0, 0x00, 0xe0, 0x01, 0xfe, 0x00, 0x15, 0x00, 0x00, 0x70, 0x00, 0x01,
  0x00, 0x00, 0x1f, 0xfc, 0x00, 0x00, 0x70, 0x00, 0x1f, 0x02, 0x0a, 0x80, 0x00, 0x3f, 0xc0, 0x1e,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0xfc, 0x15, 0x40, 0x00, 0x30, 0x3f, 0xe0,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x0a, 0x80, 0x00, 0x38, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x05, 0x40, 0x00, 0x3e, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x27, 0x80, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xc0, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x0f, 0x80, 0x00, 0xff, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0xfc,
  0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x03,
  0x3f, 0x80, 0x00, 0x00, 0x1c, 0x00, 0x0f, 0x1f, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x7f, 0xc0, 0x0f, 0xe0, 0x00, 0x00, 0xff, 0xc0, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x3f, 0xf0, 0x00, 0x00, 0x00, 0x07, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
static const unsigned char PROGMEM splash2[] =
{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc,
  0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
  0x20, 0x00, 0x41, 0x24, 0x08, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x02,
  0x20, 0x00, 0x41, 0x04, 0x08, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x80, 0x02,
  0x20, 0x00, 0x41, 0x04, 0x08, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x80, 0x02,
  0x20, 0x00, 0x41, 0x24, 0x08, 0x23, 0x91, 0x10, 0x38, 0xa7, 0x01, 0x11, 0xc4, 0x40, 0x80, 0x02,
  0x20, 0x00, 0x7f, 0x24, 0x0f, 0xe4, 0x51, 0x10, 0x44, 0xc8, 0x81, 0x12, 0x24, 0x41, 0x00, 0x02,
  0x20, 0x00, 0x41, 0x24, 0x08, 0x24, 0x4a, 0xa0, 0x04, 0x88, 0x80, 0xa2, 0x24, 0x42, 0x00, 0x02,
  0x20, 0x00, 0x41, 0x24, 0x08, 0x24, 0x4a, 0xa0, 0x3c, 0x8f, 0x80, 0xa2, 0x24, 0x44, 0x00, 0x02,
  0x20, 0x00, 0x41, 0x24, 0x08, 0x24, 0x4a, 0xa0, 0x44, 0x88, 0x00, 0xa2, 0x24, 0x44, 0x00, 0x02,
  0x20, 0x00, 0x41, 0x20, 0x08, 0x24, 0x44, 0x40, 0x4c, 0x88, 0x80, 0x42, 0x24, 0x40, 0x00, 0x02,
  0x20, 0x00, 0x41, 0x24, 0x08, 0x23, 0x84, 0x40, 0x34, 0x87, 0x00, 0x41, 0xc3, 0xc4, 0x00, 0x02,
  0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x02,
  0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x02,
  0x1f, 0xff, 0xff, 0xfc, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe,
  0x0f, 0xff, 0xff, 0xfc, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc,
  0x00, 0x00, 0x00, 0xf4, 0x01, 0x80, 0x07, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xfa, 0x03, 0x00, 0x07, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x7a, 0x03, 0x00, 0x07, 0x80, 0x00, 0x3f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x7d, 0x03, 0x00, 0x07, 0x80, 0x01, 0xf0, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x7d, 0x03, 0xff, 0xff, 0xff, 0xff, 0x00, 0x07, 0xff, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x7f, 0x83, 0xab, 0x87, 0xaa, 0xbc, 0x00, 0x01, 0xea, 0xff, 0x80, 0x00, 0x03,
  0x00, 0x00, 0x07, 0xd5, 0x43, 0x57, 0x80, 0xf5, 0x70, 0x00, 0x00, 0x75, 0x55, 0x7f, 0xf0, 0x1f,
  0x00, 0x00, 0xfa, 0xaa, 0xa3, 0xab, 0xe0, 0x38, 0xe0, 0x00, 0x00, 0x1a, 0xaa, 0xaa, 0xaf, 0xfa,
  0x00, 0x07, 0x55, 0x55, 0x51, 0xd7, 0xf0, 0x0f, 0xc0, 0x00, 0x00, 0x0f, 0x55, 0x55, 0x15, 0x7f,
  0x01, 0xfa, 0xaa, 0xaa, 0xad, 0xab, 0xf8, 0x07, 0x80, 0x00, 0x00, 0x03, 0xaa, 0xaa, 0xaa, 0xaa,
  0x07, 0x55, 0x55, 0x55, 0x57, 0xd5, 0xfc, 0x01, 0x80, 0x00, 0x00, 0x01, 0xd5, 0x55, 0x55, 0x55,
  0x3a, 0xaa, 0xaa, 0xa8, 0xaa, 0xab, 0xfe, 0x00, 0xc0, 0x00, 0x00, 0x00, 0xea, 0xaa, 0xaa, 0xaa,
  0xd5, 0x55, 0x55, 0x55, 0x55, 0x45, 0xff, 0x00, 0x60, 0x00, 0x00, 0x00, 0x75, 0x55, 0x55, 0x55,
  0xaa, 0xa8, 0xaa, 0xaa, 0xb6, 0xaa, 0xff, 0x80, 0x10, 0x00, 0x00, 0x00, 0x3a, 0xaa, 0xaa, 0xaa,
  0x55, 0x55, 0x55, 0x55, 0x41, 0x55, 0x7f, 0xc0, 0x08, 0x00, 0x00, 0x00, 0x1d, 0x55, 0x55, 0x55,
  0xaa, 0xaa, 0xaa, 0xaa, 0xb6, 0xaa, 0xbf, 0xe0, 0x04, 0x00, 0x00, 0x00, 0x1e, 0xaa, 0xaa, 0xa2,
  0x55, 0x55, 0x5f, 0xf5, 0x55, 0x55, 0x5f, 0xe0, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x51, 0x55, 0x55,
  0xa8, 0xaf, 0xe0, 0x0f, 0xaa, 0xaa, 0x8f, 0xf0, 0x01, 0x00, 0x00, 0x00, 0x06, 0xaa, 0xaa, 0xaf,
  0x55, 0x78, 0x00, 0x00, 0x75, 0x55, 0x57, 0xf8, 0x00, 0x80, 0x00, 0x00, 0x07, 0x55, 0x55, 0x78,
  0xaf, 0x80, 0x00, 0x00, 0x0f, 0xaa, 0xab, 0xf8, 0x00, 0x40, 0xf8, 0x00, 0x03, 0xaa, 0xab, 0xc0,
  0x78, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xfc, 0x00, 0x21, 0xfe, 0x00, 0x03, 0xff, 0xfe, 0x00,
  0x80, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xf0, 0xfe, 0x00, 0x11, 0xff, 0x00, 0x01, 0x80, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x7f, 0xff, 0x00, 0x00, 0x1f, 0x80, 0x01, 0x80, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x23, 0x0f, 0xff, 0x80, 0x00, 0x07, 0x80, 0x00, 0x80, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xc0, 0x0b, 0xc0, 0x00, 0x07, 0xc0, 0x00, 0xc0, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x20, 0x05, 0xe0, 0x00, 0x03, 0xc0, 0x00, 0xc0, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x02, 0xf0, 0x00, 0x03, 0xc0, 0x00, 0x60, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x06, 0x01, 0x78, 0x00, 0x17, 0xc0, 0x00, 0x60, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x01, 0x82, 0xfc, 0x00, 0x0b, 0x80, 0x00, 0x70, 0x00, 0x00,
  0x00, 0x01, 0x80, 0x00, 0x07, 0x03, 0x00, 0x7d, 0x7e, 0x00, 0x15, 0x00, 0x00, 0x70, 0x00, 0x00,
  0x00, 0x00, 0x7c, 0x00, 0x78, 0x01, 0xc0, 0x03, 0xff, 0x02, 0x0a, 0x80, 0x00, 0x38, 0x00, 0x00,
  0x00, 0x00, 0x03, 0xff, 0x80, 0x00, 0xe0, 0x00, 0x00, 0xfc, 0x15, 0x40, 0x00, 0x37, 0xf8, 0x03,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x0a, 0x80, 0x00, 0x38, 0x07, 0xfc,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x05, 0x40, 0x00, 0x3e, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x27, 0x80, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0xc0, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xf0, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x01, 0xf0, 0x00, 0x1f, 0xe0,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x1f,
  0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x01, 0xe0, 0x00, 0x00, 0x00, 0x00,
  0x07, 0xf0, 0x00, 0x00, 0x03, 0x80, 0x01, 0xff, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x0f, 0xf8, 0x01, 0xfc, 0x00, 0x00, 0x1f, 0x80, 0x01, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x07, 0xfe, 0x00, 0x00, 0x00, 0x00, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

static const unsigned char PROGMEM splash3[] =
{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc,
  0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
  0x20, 0x00, 0x41, 0x24, 0x08, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x02,
  0x20, 0x00, 0x41, 0x04, 0x08, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x80, 0x02,
  0x20, 0x00, 0x41, 0x04, 0x08, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x80, 0x02,
  0x20, 0x00, 0x41, 0x24, 0x08, 0x23, 0x91, 0x10, 0x38, 0xa7, 0x01, 0x11, 0xc4, 0x40, 0x80, 0x02,
  0x20, 0x00, 0x7f, 0x24, 0x0f, 0xe4, 0x51, 0x10, 0x44, 0xc8, 0x81, 0x12, 0x24, 0x41, 0x00, 0x02,
  0x20, 0x00, 0x41, 0x24, 0x08, 0x24, 0x4a, 0xa0, 0x04, 0x88, 0x80, 0xa2, 0x24, 0x42, 0x00, 0x02,
  0x20, 0x00, 0x41, 0x24, 0x08, 0x24, 0x4a, 0xa0, 0x3c, 0x8f, 0x80, 0xa2, 0x24, 0x44, 0x00, 0x02,
  0x20, 0x00, 0x41, 0x24, 0x08, 0x24, 0x4a, 0xa0, 0x44, 0x88, 0x00, 0xa2, 0x24, 0x44, 0x00, 0x02,
  0x20, 0x00, 0x41, 0x20, 0x08, 0x24, 0x44, 0x40, 0x4c, 0x88, 0x80, 0x42, 0x24, 0x40, 0x00, 0x02,
  0x20, 0x00, 0x41, 0x24, 0x08, 0x23, 0x84, 0x40, 0x34, 0x87, 0x00, 0x41, 0xc3, 0xc4, 0x00, 0x02,
  0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x02,
  0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x02,
  0x1f, 0xff, 0xff, 0xfc, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe,
  0x0f, 0xff, 0xff, 0xfc, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc,
  0x00, 0x00, 0x00, 0xf4, 0x01, 0x80, 0x07, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xfa, 0x03, 0x00, 0x07, 0x80, 0x00, 0x3f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x7a, 0x03, 0x00, 0x07, 0x80, 0x01, 0xf0, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x7d, 0x03, 0x00, 0xff, 0x80, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x7d, 0x03, 0xff, 0x87, 0xff, 0xfc, 0x00, 0x01, 0xff, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x7f, 0x83, 0xab, 0x80, 0xfa, 0xf0, 0x00, 0x00, 0x7a, 0xff, 0x80, 0x00, 0x03,
  0x00, 0x00, 0x07, 0xd5, 0x43, 0x57, 0xe0, 0x3d, 0xe0, 0x00, 0x00, 0x1d, 0x55, 0x7f, 0xf0, 0x1f,
  0x00, 0x00, 0xfa, 0xaa, 0xa3, 0xab, 0xf0, 0x0f, 0xc0, 0x00, 0x00, 0x0e, 0xaa, 0xaa, 0xaf, 0xfa,
  0x00, 0x07, 0x55, 0x55, 0x51, 0xd7, 0xf8, 0x07, 0x80, 0x00, 0x00, 0x03, 0x55, 0x55, 0x15, 0x7f,
  0x01, 0xfa, 0xaa, 0xaa, 0xad, 0xab, 0xfc, 0x01, 0x80, 0x00, 0x00, 0x01, 0xea, 0xaa, 0xaa, 0xaa,
  0x07, 0x55, 0x55, 0x55, 0x57, 0xd5, 0xfe, 0x00, 0xc0, 0x00, 0x00, 0x00, 0xf5, 0x55, 0x55, 0x55,
  0x3a, 0xaa, 0xaa, 0xa8, 0xaa, 0xaa, 0xff, 0x00, 0x60, 0x00, 0x00, 0x00, 0x7a, 0xaa, 0xaa, 0xaa,
  0xd5, 0x55, 0x55, 0x55, 0x55, 0x45, 0x7f, 0x80, 0x10, 0x00, 0x00, 0x00, 0x35, 0x55, 0x55, 0x55,
  0xaa, 0xa8, 0xaa, 0xaa, 0xb6, 0xaa, 0xbf, 0xc0, 0x08, 0x00, 0x00, 0x00, 0x1a, 0xaa, 0xaa, 0xaa,
  0x55, 0x55, 0x55, 0x55, 0x41, 0x55, 0x5f, 0xe0, 0x04, 0x00, 0x00, 0x00, 0x1d, 0x55, 0x55, 0x55,
  0xaa, 0xaa, 0xaa, 0xaa, 0xb6, 0xaa, 0xaf, 0xe0, 0x02, 0x00, 0x00, 0x00, 0x0e, 0xaa, 0xaa, 0xa2,
  0x55, 0x55, 0x55, 0x57, 0xfd, 0x55, 0x57, 0xf0, 0x01, 0x00, 0x00, 0x00, 0x07, 0x51, 0x55, 0x55,
  0xa8, 0xaa, 0xab, 0xf8, 0x03, 0xea, 0x8b, 0xf8, 0x00, 0x80, 0x00, 0x00, 0x06, 0xaa, 0xaa, 0xaa,
  0x55, 0x55, 0x5e, 0x00, 0x00, 0x1d, 0x55, 0xf8, 0x00, 0x40, 0xf8, 0x00, 0x03, 0x55, 0x55, 0x55,
  0xaa, 0xab, 0xe0, 0x00, 0x00, 0x3f, 0xeb, 0xfc, 0x00, 0x21, 0xfe, 0x00, 0x03, 0xfa, 0xaa, 0xaa,
  0x55, 0x5e, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xfe, 0x00, 0x11, 0xff, 0x00, 0x01, 0x87, 0xff, 0xff,
  0xff, 0xe0, 0x00, 0x00, 0x00, 0x24, 0x7f, 0xff, 0x00, 0x00, 0x1f, 0x80, 0x01, 0x80, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x23, 0x0f, 0xff, 0x80, 0x00, 0x07, 0x80, 0x00, 0x80, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xc0, 0x0b, 0xc0, 0x00, 0x07, 0xc0, 0x00, 0xc0, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x20, 0x05, 0xe0, 0x00, 0x03, 0xc0, 0x00, 0xc0, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x02, 0xf0, 0x00, 0x03, 0xc0, 0x00, 0x60, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x06, 0x01, 0x78, 0x00, 0x17, 0xc0, 0x00, 0x60, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x01, 0x82, 0xfc, 0x00, 0x0b, 0x80, 0x00, 0x70, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x7d, 0x7e, 0x00, 0x15, 0x00, 0x00, 0x70, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x60, 0x00, 0x01, 0xc0, 0x03, 0xff, 0x02, 0x0a, 0x80, 0x00, 0x3f, 0xc0, 0x00,
  0x00, 0x00, 0x00, 0x1f, 0x00, 0x1e, 0xe0, 0x00, 0x00, 0xfc, 0x15, 0x40, 0x00, 0x30, 0x3e, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xff, 0xe0, 0x30, 0x00, 0x00, 0x00, 0x0a, 0x80, 0x00, 0x38, 0x01, 0xfe,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x05, 0x40, 0x00, 0x3e, 0x00, 0x01,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x27, 0x80, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0xc0, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x70, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x27, 0xff, 0xf0,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x0f,
  0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00,
  0x00, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00,
  0x00, 0x03, 0xf8, 0x00, 0x00, 0x01, 0xc0, 0x0f, 0xf0, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x07, 0xfc, 0x00, 0xfe, 0x00, 0x00, 0x0f, 0x80, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x03, 0xff, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
static const unsigned char PROGMEM splash4[] =
{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc,
  0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
  0x20, 0x00, 0x41, 0x24, 0x08, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x02,
  0x20, 0x00, 0x41, 0x04, 0x08, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x80, 0x02,
  0x20, 0x00, 0x41, 0x04, 0x08, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x80, 0x02,
  0x20, 0x00, 0x41, 0x24, 0x08, 0x23, 0x91, 0x10, 0x38, 0xa7, 0x01, 0x11, 0xc4, 0x40, 0x80, 0x02,
  0x20, 0x00, 0x7f, 0x24, 0x0f, 0xe4, 0x51, 0x10, 0x44, 0xc8, 0x81, 0x12, 0x24, 0x41, 0x00, 0x02,
  0x20, 0x00, 0x41, 0x24, 0x08, 0x24, 0x4a, 0xa0, 0x04, 0x88, 0x80, 0xa2, 0x24, 0x42, 0x00, 0x02,
  0x20, 0x00, 0x41, 0x24, 0x08, 0x24, 0x4a, 0xa0, 0x3c, 0x8f, 0x80, 0xa2, 0x24, 0x44, 0x00, 0x02,
  0x20, 0x00, 0x41, 0x24, 0x08, 0x24, 0x4a, 0xa0, 0x44, 0x88, 0x00, 0xa2, 0x24, 0x44, 0x00, 0x02,
  0x20, 0x00, 0x41, 0x20, 0x08, 0x24, 0x44, 0x40, 0x4c, 0x88, 0x80, 0x42, 0x24, 0x40, 0x00, 0x02,
  0x20, 0x00, 0x41, 0x24, 0x08, 0x23, 0x84, 0x40, 0x34, 0x87, 0x00, 0x41, 0xc3, 0xc4, 0x00, 0x02,
  0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x02,
  0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x02,
  0x1f, 0xff, 0xff, 0xfc, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe,
  0x0f, 0xff, 0xff, 0xfc, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc,
  0x00, 0x00, 0x00, 0xf4, 0x01, 0x80, 0x07, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xfa, 0x03, 0x00, 0x07, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x7a, 0x03, 0x00, 0x07, 0x80, 0x00, 0x3f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x7d, 0x03, 0x00, 0x07, 0x80, 0x01, 0xf0, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x7d, 0x03, 0xff, 0xff, 0xff, 0xff, 0x00, 0x07, 0xff, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x7f, 0x83, 0xab, 0x87, 0xaa, 0xbc, 0x00, 0x01, 0xea, 0xff, 0x80, 0x00, 0x03,
  0x00, 0x00, 0x07, 0xd5, 0x43, 0x57, 0x80, 0xf5, 0x70, 0x00, 0x00, 0x75, 0x55, 0x7f, 0xf0, 0x1f,
  0x00, 0x00, 0xfa, 0xaa, 0xa3, 0xab, 0xe0, 0x38, 0xe0, 0x00, 0x00, 0x1a, 0xaa, 0xaa, 0xaf, 0xfa,
  0x00, 0x07, 0x55, 0x55, 0x51, 0xd7, 0xf0, 0x0f, 0xc0, 0x00, 0x00, 0x0f, 0x55, 0x55, 0x15, 0x7f,
  0x01, 0xfa, 0xaa, 0xaa, 0xad, 0xab, 0xf8, 0x07, 0x80, 0x00, 0x00, 0x03, 0xaa, 0xaa, 0xaa, 0xaa,
  0x07, 0x55, 0x55, 0x55, 0x57, 0xd5, 0xfc, 0x01, 0x80, 0x00, 0x00, 0x01, 0xd5, 0x55, 0x55, 0x55,
  0x3a, 0xaa, 0xaa, 0xa8, 0xaa, 0xab, 0xfe, 0x00, 0xc0, 0x00, 0x00, 0x00, 0xea, 0xaa, 0xaa, 0xaa,
  0xd5, 0x55, 0x55, 0x55, 0x55, 0x45, 0xff, 0x00, 0x60, 0x00, 0x00, 0x00, 0x75, 0x55, 0x55, 0x55,
  0xaa, 0xa8, 0xaa, 0xaa, 0xb6, 0xaa, 0xff, 0x80, 0x10, 0x00, 0x00, 0x00, 0x3a, 0xaa, 0xaa, 0xaa,
  0x55, 0x55, 0x55, 0x55, 0x41, 0x55, 0x7f, 0xc0, 0x08, 0x00, 0x00, 0x00, 0x1d, 0x55, 0x55, 0x55,
  0xaa, 0xaa, 0xaa, 0xaa, 0xb6, 0xaa, 0xbf, 0xe0, 0x04, 0x00, 0x00, 0x00, 0x1e, 0xaa, 0xaa, 0xa2,
  0x55, 0x55, 0x55, 0x55, 0x7f, 0xd5, 0x5f, 0xe0, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x51, 0x55, 0x55,
  0xa8, 0xaa, 0xaa, 0x9f, 0x80, 0x3e, 0x8f, 0xf0, 0x01, 0x00, 0x00, 0x00, 0x07, 0xaa, 0xaa, 0xaa,
  0x55, 0x55, 0x55, 0xe0, 0x00, 0x01, 0xd7, 0xf8, 0x00, 0x80, 0x00, 0x00, 0x06, 0x75, 0x55, 0x55,
  0xaa, 0xaa, 0xbe, 0x00, 0x00, 0x00, 0x3f, 0xf8, 0x00, 0x40, 0xf8, 0x00, 0x03, 0x0f, 0xaa, 0xaa,
  0x55, 0x55, 0xe0, 0x00, 0x00, 0x3f, 0x81, 0xfc, 0x00, 0x21, 0xfe, 0x00, 0x03, 0x00, 0x7f, 0xff,
  0xff, 0xfe, 0x00, 0x00, 0x00, 0x3f, 0xf0, 0xfe, 0x00, 0x11, 0xff, 0x00, 0x01, 0x80, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x7f, 0xff, 0x00, 0x00, 0x1f, 0x80, 0x01, 0x80, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x23, 0x0f, 0xff, 0x80, 0x00, 0x07, 0x80, 0x00, 0x80, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xc0, 0x0b, 0xc0, 0x00, 0x07, 0xc0, 0x00, 0xc0, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x20, 0x05, 0xe0, 0x00, 0x03, 0xc0, 0x00, 0xc0, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x02, 0xf0, 0x00, 0x03, 0xc0, 0x00, 0x60, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x06, 0x01, 0x78, 0x00, 0x17, 0xc0, 0x00, 0x60, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x01, 0x82, 0xfc, 0x00, 0x0b, 0x80, 0x00, 0x7f, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x06, 0x00, 0x03, 0x00, 0x7d, 0x7e, 0x00, 0x15, 0x00, 0x00, 0x70, 0xfc, 0x00,
  0x00, 0x00, 0x00, 0x01, 0xf0, 0x01, 0xc0, 0x03, 0xff, 0x02, 0x0a, 0x80, 0x00, 0x30, 0x03, 0xe0,
  0x00, 0x00, 0x00, 0x00, 0x0f, 0xfe, 0xe0, 0x00, 0x00, 0xfc, 0x15, 0x40, 0x00, 0x30, 0x00, 0x1f,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x0a, 0x80, 0x00, 0x38, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x05, 0x40, 0x00, 0x3e, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x27, 0x80, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0xc0, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0xff, 0xfe,
  0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x01,
  0x1f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x00, 0x01, 0xe0, 0x00, 0x00,
  0x00, 0x1f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x38, 0x1f, 0x1e, 0x00, 0x00, 0x01, 0xe0, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xff, 0x80, 0x1f, 0xc0, 0x00, 0x01, 0xf0, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x7f, 0xe0, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
static const unsigned char PROGMEM face[] =
{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xfc, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x07, 0xf0, 0x03, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x80, 0x00, 0x3c,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00,
  0x00, 0x03, 0xc0, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x01, 0xe0, 0x00, 0x00, 0x00, 0x01,
  0xc0, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00,
  0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0xfe, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x0c,
  0x07, 0xff, 0xc0, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x04, 0x0f, 0x03, 0xe0, 0x38, 0x00, 0x00, 0x00,
  0x00, 0x06, 0x3c, 0x00, 0x70, 0x30, 0x00, 0x00, 0x00, 0x00, 0x02, 0x50, 0x01, 0xf0, 0x60, 0x01,
  0xff, 0x00, 0x00, 0x02, 0x80, 0x03, 0xf0, 0xc0, 0x02, 0x01, 0x80, 0x00, 0x03, 0x00, 0x0f, 0xe0,
  0xc0, 0x04, 0x00, 0xc0, 0x00, 0x04, 0x00, 0x3f, 0xc0, 0x80, 0x08, 0xfe, 0x60, 0x00, 0x08, 0x00,
  0xff, 0x80, 0x00, 0x11, 0xff, 0x30, 0x00, 0x30, 0x01, 0xff, 0x00, 0x00, 0x1b, 0xff, 0xb0, 0x00,
  0xe0, 0x07, 0xfe, 0x00, 0x00, 0x33, 0xff, 0x98, 0x03, 0x80, 0x1f, 0xfc, 0x00, 0x00, 0x37, 0x9f,
  0xd8, 0x0f, 0x00, 0x3f, 0xf8, 0x00, 0x00, 0x37, 0xff, 0xd8, 0x3c, 0x00, 0x7f, 0xf0, 0x00, 0x00,
  0x77, 0xff, 0xd8, 0xf0, 0x00, 0xff, 0xe0, 0x00, 0x00, 0xf7, 0xff, 0xd8, 0xc0, 0x01, 0xff, 0xc0,
  0x00, 0x07, 0xf7, 0xff, 0xf8, 0x00, 0x03, 0xff, 0x80, 0x00, 0x0f, 0xf7, 0xff, 0xf8, 0x00, 0x07,
  0xff, 0x00, 0x00, 0x1f, 0xf3, 0xfe, 0x10, 0x00, 0x0f, 0xfe, 0x00, 0x00, 0x3f, 0xf9, 0xf8, 0x00,
  0x00, 0x1f, 0xfc, 0x00, 0x00, 0x1f, 0xfd, 0x60, 0x00, 0x00, 0x3f, 0xf8, 0x00, 0x3c, 0x3f, 0xfa,
  0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xde, 0x1f, 0xf4, 0x00, 0x00, 0x01, 0xfc, 0x1f, 0x80, 0x16,
  0x3f, 0xe8, 0x00, 0x00, 0x03, 0xf8, 0x01, 0xe0, 0x66, 0x1f, 0xf0, 0x00, 0x00, 0x07, 0xe0, 0x00,
  0xfb, 0x86, 0x0f, 0xf0, 0x00, 0x38, 0x1f, 0xc0, 0x00, 0x3e, 0x0c, 0x07, 0xe0, 0x00, 0x1c, 0x7f,
  0xe0, 0x01, 0xf0, 0x0c, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0x80, 0x18, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f,
  0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x1f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x07, 0xe0, 0x00, 0x00
};
static const unsigned char PROGMEM face2[] =
{ 0x00, 0x1f, 0xef, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xfc, 0x1e, 0x00, 0x00, 0x00, 0x00, 0xfe,
  0xf0, 0x07, 0x00, 0x00, 0x00, 0x01, 0xc1, 0x00, 0x00, 0x80, 0xfc, 0x00, 0x03, 0xc7, 0x00, 0x00,
  0x43, 0xff, 0x80, 0x07, 0x8c, 0x00, 0x00, 0x6f, 0x03, 0x80, 0x07, 0x18, 0x00, 0x00, 0x38, 0x00,
  0x40, 0x07, 0x38, 0x00, 0x00, 0x30, 0x00, 0x40, 0x07, 0x78, 0x7c, 0x00, 0x60, 0x00, 0x40, 0x0e,
  0xf1, 0x86, 0x00, 0xc0, 0x0f, 0x40, 0x0e, 0xf3, 0x7a, 0x01, 0x80, 0x7f, 0xc0, 0x0f, 0xf2, 0xff,
  0x03, 0x00, 0xff, 0x80, 0x19, 0xe5, 0xed, 0x06, 0x01, 0xff, 0x80, 0x30, 0xe5, 0xfd, 0x04, 0x03,
  0xff, 0x80, 0x30, 0x65, 0xfd, 0x00, 0x07, 0xff, 0x00, 0x20, 0x65, 0xf2, 0x00, 0x0f, 0xfe, 0x00,
  0x4c, 0x24, 0x3f, 0x00, 0x1f, 0xfc, 0x00, 0x5e, 0x2f, 0xe0, 0x00, 0x3f, 0xfc, 0x00, 0xde, 0x3f,
  0xc0, 0x00, 0x7f, 0xf0, 0x00, 0xbe, 0x17, 0x00, 0x00, 0xff, 0xf0, 0x00, 0xbe, 0x1f, 0x00, 0x01,
  0xff, 0xe0, 0x00, 0xbe, 0x1f, 0x0c, 0x03, 0xff, 0xc0, 0x00, 0xbe, 0x17, 0x07, 0x07, 0xff, 0x00,
  0x00, 0xbe, 0x1f, 0x01, 0xff, 0xff, 0x00, 0x00, 0xbe, 0x17, 0x00, 0x1f, 0xff, 0x80, 0x00, 0x5e,
  0x13, 0x80, 0x07, 0x9b, 0xc0, 0x00, 0x5e, 0x20, 0x00, 0x01, 0x0c, 0xf0, 0x00, 0x7e, 0x60, 0x00,
  0x00, 0xc6, 0x78, 0x00, 0x2c, 0x40, 0x00, 0x00, 0x62, 0x1c, 0x00, 0x30, 0xe0, 0x00, 0x00, 0x18,
  0x06, 0x00, 0x1f, 0xe0, 0x00, 0x18, 0x0e, 0x07, 0x80, 0x0f, 0xe0, 0x00, 0x1e, 0x07, 0x06, 0x80,
  0x07, 0xf0, 0x00, 0x03, 0x80, 0xfd, 0x80, 0x07, 0xf0, 0x00, 0x00, 0xe0, 0x03, 0x00, 0x07, 0xf0,
  0x00, 0x00, 0x78, 0x06, 0x00, 0x07, 0xf0, 0x00, 0x00, 0x0c, 0x0c, 0x00, 0x07, 0xe8, 0x00, 0x00,
  0x03, 0xf0, 0x00, 0x07, 0xfc, 0x00, 0x00, 0x03, 0x00, 0x00, 0x07, 0xfe, 0x00, 0x00, 0x03, 0x00,
  0x00, 0x07, 0xfc, 0x00, 0x00, 0x01, 0x80, 0x00, 0x07, 0xfc, 0x00, 0x00, 0x01, 0x80, 0x00, 0x07,
  0xfe, 0x00, 0x00, 0x01, 0x80, 0x00, 0x07, 0xfc, 0x00, 0x00, 0x00, 0x80, 0x00, 0x07, 0xfc, 0x00,
  0x00, 0x00, 0x80, 0x00, 0x07, 0xfe, 0x00, 0x00, 0x00, 0x40, 0x00
};
static const unsigned char PROGMEM connecting[] =
{ 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc3, 0x80, 0x00, 0x00,
  0x0c, 0x00, 0xc0, 0x70, 0x00, 0x00, 0x1e, 0x00, 0xe0, 0x3c, 0x00, 0x00, 0x33, 0x80, 0xe0, 0x0e,
  0x00, 0x00, 0x23, 0x00, 0xe0, 0x03, 0x00, 0x00, 0xc6, 0x00, 0xf0, 0x01, 0x80, 0x03, 0xe6, 0x00,
  0xf8, 0x00, 0x40, 0x0e, 0x7e, 0x00, 0xf8, 0x00, 0x30, 0x38, 0x3c, 0x00, 0x7c, 0x00, 0x18, 0xe0,
  0x18, 0x00, 0x7e, 0x00, 0x07, 0x80, 0x10, 0x00, 0x7f, 0x00, 0x0f, 0x00, 0x10, 0x00, 0x7f, 0x80,
  0x39, 0x80, 0x30, 0x00, 0x3f, 0x80, 0xe0, 0xc0, 0x30, 0x00, 0x3f, 0xc3, 0x80, 0x70, 0x60, 0x00,
  0x3f, 0xee, 0x00, 0x18, 0x60, 0x00, 0x1f, 0xf2, 0x00, 0x18, 0x40, 0x00, 0x1f, 0xfe, 0x00, 0x0c,
  0x40, 0x00, 0x1f, 0xfc, 0x00, 0x06, 0x80, 0x00, 0x0f, 0xfe, 0x00, 0x03, 0x80, 0x00, 0x0f, 0xff,
  0x00, 0x01, 0x80, 0x00, 0x07, 0xff, 0x80, 0x01, 0xe0, 0x00, 0x03, 0xff, 0xc0, 0x03, 0x30, 0x00,
  0x03, 0xff, 0xe0, 0x03, 0x10, 0x00, 0x03, 0xff, 0xf0, 0x02, 0x18, 0x00, 0x03, 0xff, 0xf8, 0x02,
  0x0c, 0x00, 0x01, 0xff, 0xfc, 0x04, 0x06, 0x00, 0x03, 0xff, 0xff, 0x1c, 0x06, 0x00, 0x07, 0xff,
  0xff, 0xbc, 0x03, 0x00, 0x0c, 0x7f, 0xff, 0xec, 0x01, 0x80, 0x0c, 0x7f, 0xff, 0xf8, 0x00, 0x80,
  0x0c, 0x3f, 0xff, 0xf8, 0x00, 0xc0, 0x0c, 0x1f, 0xff, 0xfc, 0x00, 0x40, 0x0f, 0x0f, 0xff, 0xff,
  0x00, 0x60, 0x1f, 0x03, 0xff, 0xff, 0xc0, 0x20, 0x1f, 0x81, 0xff, 0xff, 0xf0, 0x30, 0x1f, 0xe0,
  0xff, 0xff, 0xfc, 0x10, 0x1f, 0xf8, 0xff, 0xff, 0xfe, 0x18, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xf0,
  0x1f, 0xff, 0xff, 0x0f, 0xff, 0xe0, 0x1f, 0xff, 0xff, 0x00, 0x7f, 0x00, 0x1f, 0xff, 0xff, 0x00,
  0x00, 0x00, 0x0f, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xc0, 0x00, 0x00, 0x00
};
static const unsigned char PROGMEM warning[] =
{ 0x00, 0x0f, 0x00, 0x00, 0x00, 0x1f, 0x80, 0x00, 0x00, 0x19, 0xc0, 0x00, 0x00, 0x30, 0xc0, 0x00,
  0x00, 0x70, 0xe0, 0x00, 0x00, 0x60, 0x60, 0x00, 0x00, 0xe0, 0x30, 0x00, 0x00, 0xc6, 0x38, 0x00,
  0x01, 0x8f, 0x18, 0x00, 0x03, 0x8f, 0x1c, 0x00, 0x03, 0x0f, 0x0c, 0x00, 0x07, 0x0f, 0x0e, 0x00,
  0x06, 0x0f, 0x06, 0x00, 0x0e, 0x06, 0x03, 0x00, 0x0c, 0x06, 0x03, 0x80, 0x18, 0x06, 0x01, 0x80,
  0x38, 0x00, 0x01, 0xc0, 0x30, 0x00, 0x00, 0xc0, 0x70, 0x06, 0x00, 0x60, 0x60, 0x0f, 0x00, 0x70,
  0xc0, 0x06, 0x00, 0x30, 0xc0, 0x00, 0x00, 0x30, 0xc0, 0x00, 0x00, 0x30, 0xff, 0xff, 0xff, 0xf0,
  0x7f, 0xff, 0xff, 0xe0
};

Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

uint8_t screen_start_x, screen_start_y;

extern const char* SIM800LCallerNames[];
extern const char* SIM800LCallerNumbers[];
extern char SIM800LCallerName[4];
extern char SIM800LCallerNumber[15];
extern char SIM800LOperatorName[10];
extern uint8_t SIM800LSignalQuality;
extern uint8_t SIM800LStatus;
extern uint8_t requestOrder;
extern uint8_t callTime;
extern char callTimeFormatted[6];
extern uint8_t battStatus, battLevel;
extern char* returnRAWResultsBuffer(void);
extern bool isKnownCaller;

int lineNumber;

void displayInit(short int b = BRIGHTNESS) {
  display.begin(SSD1306_SWITCHCAPVCC, OLED_I2C_ADDRESS);
  display.ssd1306_command(SSD1306_SETCONTRAST);
  display.ssd1306_command(b);
  display.setTextWrap(false);
  display.setTextColor(SSD1306_WHITE);
}

void drawAnimatedSplash(void) {
  for (int i = 0; i < 5; i++) {
    //      display.clearDisplay();
    //      display.drawBitmap(0, 0, splash, SCREEN_WIDTH, SCREEN_HEIGHT, 1);
    //      display.display();
    //      delay(50);
    display.clearDisplay();
    display.drawBitmap(0, 0, splash2, SCREEN_WIDTH, SCREEN_HEIGHT, 1);
    display.display();
    delay(50);
    display.clearDisplay();
    display.drawBitmap(0, 0, splash3, SCREEN_WIDTH, SCREEN_HEIGHT, 1);
    display.display();
    delay(50);
    display.clearDisplay();
    display.drawBitmap(0, 0, splash4, SCREEN_WIDTH, SCREEN_HEIGHT, 1);
    display.display();
    delay(50);
    display.clearDisplay();
    display.drawBitmap(0, 0, splash3, SCREEN_WIDTH, SCREEN_HEIGHT, 1);
    display.display();
    delay(50);
    //      display.clearDisplay();
    //      display.drawBitmap(0, 0, splash2, SCREEN_WIDTH, SCREEN_HEIGHT, 1);
    //      display.display();
    //      delay(50);
  }
}

void drawStaticSplash(void) {
  display.display();
  delay(500);
}

void drawCentreString(const char *buf, int x, int y, int s) {
  uint16_t x1, y1;
  uint16_t w, h;
  display.getTextBounds(buf, x, y, &x1, &y1, &w, &h); //calc width of new string
  w = w * s;
  h = h * s;
  display.setCursor(x - w / 2, y);
  display.print(buf);
}

void drawWarningScreen() {
  display.clearDisplay();
  display.setTextSize(1);
  display.drawBitmap(screen_start_x + 50, screen_start_y + 10, warning, 28, 25, 1);
  display.setCursor(screen_start_x + 30, screen_start_y + 40);
  display.print(F("LOW BATTERY!"));
  display.setCursor(screen_start_x + 20, screen_start_y + 50);
  display.print(F("PLEASE RECHARGE"));
  display.display();
}

void drawCharingScreen() {
  display.clearDisplay();
  display.setTextSize(2);
  display.setCursor(screen_start_x + 22, screen_start_y + 20);
  display.print(F("CHARGING"));
  display.setTextSize(1);
  display.setCursor(screen_start_x + 10, screen_start_y + 40);
  display.print(F("INITIATING A CHARGE!"));
  display.display();
}

void drawBanner() {
  display.clearDisplay();
  display.setTextSize(1);
  display.drawBitmap(screen_start_x, screen_start_y, network_icon, 8, 10, 1);
  switch (100 / SIM800LSignalQuality) {
    default:
      display.drawLine(screen_start_x + 10, screen_start_y + 3, screen_start_x + 16, screen_start_y + 9, SSD1306_WHITE);
      display.drawLine(screen_start_x + 10, screen_start_y + 9, screen_start_x + 16, screen_start_y + 3, SSD1306_WHITE);
      break;
    case 1:
      display.drawPixel(screen_start_x + 8, screen_start_y + 9, SSD1306_WHITE);
      display.drawPixel(screen_start_x + 10, screen_start_y + 9, SSD1306_WHITE);
      display.drawPixel(screen_start_x + 12, screen_start_y + 9, SSD1306_WHITE);
      display.drawPixel(screen_start_x + 14, screen_start_y + 9, SSD1306_WHITE);
      display.drawLine(screen_start_x + 8, screen_start_y + 7, screen_start_x + 8, screen_start_y + 6, SSD1306_WHITE);
      break;
    case 2:
      display.drawPixel(screen_start_x + 8, screen_start_y + 9, SSD1306_WHITE);
      display.drawPixel(screen_start_x + 10, screen_start_y + 9, SSD1306_WHITE);
      display.drawPixel(screen_start_x + 12, screen_start_y + 9, SSD1306_WHITE);
      display.drawPixel(screen_start_x + 14, screen_start_y + 9, SSD1306_WHITE);
      display.drawLine(screen_start_x + 8, screen_start_y + 7, screen_start_x + 8, screen_start_y + 6, SSD1306_WHITE);
      display.drawLine(screen_start_x + 10, screen_start_y + 7, screen_start_x + 10, screen_start_y + 4, SSD1306_WHITE);
      break;
    case 3:
      display.drawPixel(screen_start_x + 8, screen_start_y + 9, SSD1306_WHITE);
      display.drawPixel(screen_start_x + 10, screen_start_y + 9, SSD1306_WHITE);
      display.drawPixel(screen_start_x + 12, screen_start_y + 9, SSD1306_WHITE);
      display.drawPixel(screen_start_x + 14, screen_start_y + 9, SSD1306_WHITE);
      display.drawLine(screen_start_x + 8, screen_start_y + 7, screen_start_x + 8, screen_start_y + 6, SSD1306_WHITE);
      display.drawLine(screen_start_x + 10, screen_start_y + 7, screen_start_x + 10, screen_start_y + 4, SSD1306_WHITE);
      display.drawLine(screen_start_x + 12, screen_start_y + 7, screen_start_x + 12, screen_start_y + 2, SSD1306_WHITE);
      break;
    case 4:
      display.drawPixel(screen_start_x + 8, screen_start_y + 9, SSD1306_WHITE);
      display.drawPixel(screen_start_x + 10, screen_start_y + 9, SSD1306_WHITE);
      display.drawPixel(screen_start_x + 12, screen_start_y + 9, SSD1306_WHITE);
      display.drawPixel(screen_start_x + 14, screen_start_y + 9, SSD1306_WHITE);
      display.drawLine(screen_start_x + 8, screen_start_y + 7, screen_start_x + 8, screen_start_y + 6, SSD1306_WHITE);
      display.drawLine(screen_start_x + 10, screen_start_y + 7, screen_start_x + 10, screen_start_y + 4, SSD1306_WHITE);
      display.drawLine(screen_start_x + 12, screen_start_y + 7, screen_start_x + 12, screen_start_y + 2, SSD1306_WHITE);
      display.drawLine(screen_start_x + 14, screen_start_y + 7, screen_start_x + 14, screen_start_y + 0, SSD1306_WHITE);
      break;
  }
  drawCentreString(SIM800LOperatorName, screen_start_x + 64, screen_start_y + 2, 1);
  display.drawRoundRect(screen_start_x + SCREEN_WIDTH - 17, screen_start_y, 14, 10, 2, SSD1306_WHITE);
  display.fillRect(screen_start_x + SCREEN_WIDTH - 15, screen_start_y + 2, map(battLevel, 0, 100, 1, 10), 6, SSD1306_WHITE);
  display.drawLine(screen_start_x + 125, screen_start_y + 3, screen_start_x + 125, screen_start_y + 6, SSD1306_WHITE);
  display.drawLine(screen_start_x + 126, screen_start_y + 3, screen_start_x + 126, screen_start_y + 6, SSD1306_WHITE);
  switch (battStatus) {
    case 0:
      break;
    case 1:
      break;
    case 2:
      display.drawBitmap(screen_start_x + SCREEN_WIDTH - 27, screen_start_y, charged_icon, 8, 10, 1);
      break;
  }
  //display.drawLine(screen_start_x, screen_start_y + 11, screen_start_x + SCREEN_WIDTH, screen_start_y + 11, SSD1306_WHITE);
}

void drawIdleScreen() {
  display.setTextSize(1);
  display.drawBitmap(screen_start_x, screen_start_y + 63 - 45, face, 71, 45, 1);
  display.setTextSize(2);
  drawCentreString(WATCH_OWNER, screen_start_x + 126, screen_start_y + 20, 2);
  display.drawRoundRect(screen_start_x + 75, screen_start_y + 45, 52, 17, 4, SSD1306_WHITE);
  display.setTextSize(1);
  display.setCursor(screen_start_x + 80, screen_start_y + 50);
  display.print(SIM800LCallerNames[0]);
  display.setCursor(screen_start_x + 105, screen_start_y + 50);
  display.print(SIM800LCallerNames[1]);
  display.drawLine(screen_start_x + 100, screen_start_y + 45, screen_start_x + 100, screen_start_y + 61, SSD1306_WHITE);
  display.drawLine(screen_start_x + 101, screen_start_y + 45, screen_start_x + 101, screen_start_y + 61, SSD1306_WHITE);
  display.display();
}

void drawNetworkScreen() {
  display.setTextSize(1);
  display.drawBitmap(screen_start_x + 10, screen_start_y + 63 - 45, connecting, 45, 45, 1);
  display.setCursor(screen_start_x + 60, screen_start_y + 45);
  display.print(F("REGISTERING"));
  display.setCursor(screen_start_x + 66, screen_start_y + 55);
  display.print(F("TO NETWORK"));
  display.display();
}

void drawIncomingCallScreen() {
  display.drawBitmap(screen_start_x, screen_start_y + 63 - 45, face2, 50, 45, 1);
  display.drawRoundRect(screen_start_x + 60, screen_start_y + 41, 63, 22, 4, SSD1306_WHITE);
  display.drawBitmap(screen_start_x + 65, screen_start_y + SCREEN_HEIGHT - 20, accept_icon, 20, 16, 1);
  display.drawBitmap(screen_start_x + 99, screen_start_y + SCREEN_HEIGHT - 20, reject_icon, 16, 16, 1);
  display.drawLine(screen_start_x + 90, screen_start_y + 43, screen_start_x + 90, screen_start_y + 59, SSD1306_WHITE);
  display.drawLine(screen_start_x + 91, screen_start_y + 43, screen_start_x + 91, screen_start_y + 59, SSD1306_WHITE);
  display.setTextSize(2);
  if (isKnownCaller) {
    display.setCursor(screen_start_x + 74, screen_start_y + 20);
    display.print(SIM800LCallerName);
  }
  else {
    display.setCursor(screen_start_x + 74, screen_start_y + 14);
    display.print(SIM800LCallerName);
    display.setTextSize(1);
    display.setCursor(screen_start_x + 58, screen_start_y + 30);
    display.print(SIM800LCallerNumber);
  }
  display.display();
}

void drawInCallScreen() {
  display.setTextSize(1);
  display.drawBitmap(screen_start_x, screen_start_y + 63 - 45, face2, 50, 45, 1);
  display.drawRoundRect(screen_start_x + 60, screen_start_y + 41, 63, 22, 4, SSD1306_WHITE);
  display.drawBitmap(screen_start_x + 67, screen_start_y + SCREEN_HEIGHT - 20, reject_icon, 16, 16, 1);
  display.drawBitmap(screen_start_x + 99, screen_start_y + SCREEN_HEIGHT - 20, reject_icon, 16, 16, 1);
  display.drawLine(screen_start_x + 90, screen_start_y + 43, screen_start_x + 90, screen_start_y + 59, SSD1306_WHITE);
  display.drawLine(screen_start_x + 91, screen_start_y + 43, screen_start_x + 91, screen_start_y + 59, SSD1306_WHITE);
  display.setTextSize(2);
  if (isKnownCaller) {
    display.setCursor(screen_start_x + 58, screen_start_y + 20);
    display.print(SIM800LCallerName);
    display.setTextSize(1);
    display.setCursor(screen_start_x + 95, screen_start_y + 20);
    display.print(callTimeFormatted);
  }
  else {
    display.setCursor(screen_start_x + 58, screen_start_y + 14);
    display.print(SIM800LCallerName);
    display.setTextSize(1);
    display.setCursor(screen_start_x + 58, screen_start_y + 30);
    display.print(SIM800LCallerNumber);
    display.setCursor(screen_start_x + 95, screen_start_y + 16);
    display.print(callTimeFormatted);
  }
  display.display();
}

void drawDebugMode1Screen() {
  display.clearDisplay();
  display.setTextSize(1);
  display.setCursor(screen_start_x, screen_start_y);
  display.print(F("Battery Level: "));
  display.println(battLevel);
  display.print(F("Battery Status: "));
  display.println(battStatus);
  display.print(F("Signal Quality: "));
  display.println(SIM800LSignalQuality);
  display.print(F("Op Name: "));
  display.println(SIM800LOperatorName);
  display.print(F("Caller: "));
  display.println(SIM800LCallerNumber);
  display.print(F("SIM Status: "));
  display.println(SIM800LStatus);
  display.print(F("Call Time: "));
  display.println(callTimeFormatted);
  display.print(F("RAW: "));
  display.println(returnRAWResultsBuffer());
  display.display();
}

void drawDebugMode2Screen(char c) {
  display.setTextSize(1);
  if (c == '\n') {
    lineNumber++;
    if (lineNumber <= 8) {
      display.print((char)c);
      display.display();
    }
    else {
      display.clearDisplay();
      display.setCursor(screen_start_x, screen_start_y);
      display.print((char)c);
      display.display();
    }
  }
  else {
    display.print((char)c);
  }
  (lineNumber > 8) ? lineNumber = 0 : -1;
}

void generateNewScreenCoordinates(short int a = 0, short int b = 2) {
  screen_start_x = random(a, b);
  screen_start_y = random(a, b);
}

void forceScreenToSleep() {
  display.ssd1306_command(SSD1306_DISPLAYOFF);
}

void releaseScreenFromSleep() {
  display.ssd1306_command(SSD1306_DISPLAYON);
}
